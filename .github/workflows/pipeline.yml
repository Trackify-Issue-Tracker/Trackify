# Build angular app and push it to the trackify-live-static-website repo so that github pages and display the app
# Create an in-memory database and have the angular app use that through setting environmental variables
# thus the containers won't be used for the live app since github pages only allows static webpages
# To use the containers, you must have docker installed and run the compose file locally. Then you can access
# the app using localhost:5000, which will then use the python container api and the postgres container database.

# Test api using ./api/test.py but needs to be run in the docker compose container for api
# Test index.html

# Status checks:
# javascript linter
# python linter
# api tests

name: Build and Push Angular web app to trackify-live-app repo

# On merge to main
# on:
#   pull_request:
#     branches:
#       - main
#     types:
#       - closed
on:
  pull_request:
    branches:
      - main
      - nonprod

env:
  API_SETTING: 'local'

jobs:
  build-and-push:
    name: Build Project and Push to repo
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        cd app
        npm install
        npm install -g @angular/cli@17 > /dev/null 

    # Build and push the Angular app
    - name: Build Angular app
      run: |
        cd app
        npm run ng build --prod

    # - name: Upload Angular app
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: dist
    #     path: ./app/dist

    # - name: Download artifact
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: dist
    #     path: ./dist

    - name: Push Angular app to repo
    #         curl -o dist.zip https://api.github.com/repos/Trackify-Issue-Tracker/trackify-live-static-website/actions/artifacts/$(curl -s https://api.github.com/repos/Trackify-Issue-Tracker/trackify-live-static-website/actions/runs/${GITHUB_RUN_ID}/artifacts | jq -r '.artifacts[] | select(.name == "dist") | .archive_download_url')
    # curl -o dist.zip $(curl -s https://api.github.com/repos/Trackify-Issue-Tracker/trackify-live-static-website/actions/artifacts/${GITHUB_RUN_ID} | jq -r '.artifacts[] | select(.name == "dist") | .archive_download_url')
    # unzip dist.zip -d ./dist
      run: |
        cd ./app/dist
        git config user.name github-actions
        git config user.email github-actions@github.com
        git remote set-url origin https://Trackify-Issue-Tracker:${GITHUB_TOKEN}@github.com/Trackify-Issue-Tracker/trackify-live-static-website
        git checkout -b main
        git add -f .
        git commit -m "Deploy Angular app"
        git push https://Trackify-Issue-Tracker:${GITHUB_TOKEN}@github.com/Trackify-Issue-Tracker/trackify-live-static-website.git main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}